1. Print odd numbers in an array

let a=[0,1,2,3,4,5,6,7,8,9];

(function ()  {

  let odd= a.filter(num => num %2 ==1);
return odd;

  })();

OUTPUT: [1,3,5,7,9]

2. Convert all the strings to title caps in a string array

(function (str) {
str = str.toLowerCase().split(' ');
for (var i = 0; i < str.length; i++){
  str[i] = str[i].charAt(0).toUpperCase() + str[i].slice(1);
}
console.log(str.join(' '));
})("gladson jerome")

OUTPUT: Gladson Jerome


3. Sum of all numbers in an array

(function () {
  let sum = [1, 2, 3, 4, 5, 6, 7, 8, 9].reduce(add, 10);
  function add(accumulator, a) {
    return accumulator + a;
  }
  console.log(sum);
})()

OUTPUT: 55


4. Return all the prime numbers in an array

(function (){
var primeNum = [2, 3, 4, 5, 6]

primeNum = primeNum.filter(function(number) {
  for (var i = 2; i <= Math.sqrt(number); i++) {
    if (number % i === 0) return false;
  }
  return true;
});

console.log(primeNum);
})()

OUTPUT: [2,3,5]


5. Return all the palindromes in an array

( function () {
  var myArray = ['mom', 'bye', 'radar', 'world', 'bob'];
  var arr = myArray.filter(function (c, d) {
    var palindrome = c.split('').reverse().join('');
    if (c == palindrome) {
      console.log(myArray[d]);
    }
  });
})()

OUTPUT:  ['mom', 'radar', 'bob']


6. Return median of two sorted arrays of same size.

( function() {
let arr1 =  [1, 3, 5, 7, 9];
let arr2 = [2, 4, 6, 8, 10];

  let c = [...arr1, ...arr2].sort((arr1, arr2) => arr1 - arr2);

  const half = c.length / 2 | 0;
  
if (c.length % 2) {
console.log(c[half]);
} else {
  
console.log((c[half] + c[half - 1]) / 2);
}

})()

OUTPUT: 5.5


7. Remove duplicates from an 

(function () {
  
  let numbers = [1, 1, 2, 2, 3, 4, 5, 5];
  
  let duplicates = numbers.filter((item, index) => index !== numbers.indexOf(item));
  
  console.log(duplicates);
})()

OUTPUT: (2)Â [1, 2, 5]


8. Remove duplicates from an array

(function(A, K) {
  if (A.length === K || K === 0) {
      return A;
  }
  K = K % A.length;
  for (let i = 0; i < K; i++) {
      A.unshift(A.pop());
  }
console.log(A)
})([5, 4, 3, 2, 1],2)

OUTPUT: [ 2, 1, 5, 4, 3 ]

